{
  "name": "gameloop",
  "version": "0.3.1",
  "description": "a gameloop.",
  "main": "index.js",
  "scripts": {
    "start": "beefy example.js:bundle.js --live"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sethvincent/gameloop.git"
  },
  "keywords": [
    "games",
    "animation",
    "game library",
    "game loop"
  ],
  "author": {
    "name": "Seth Vincent",
    "email": "sethvincent@gmail.com",
    "url": "http://sethvincent.com"
  },
  "license": "MIT",
  "dependencies": {
    "inherits": "~2.0.0"
  },
  "devDependencies": {
    "tape": "~2.1.0",
    "crtrdg-keyboard": "0.0.2",
    "tic": "^0.2.1"
  },
  "readme": "# gameloop\n> the core methods/events of a game loop: start, end, pause, resume, update, draw\n\nDesigned for use with browserify.\n\n## Requirements\n- node.js\n\n## Install\n\n````\nnpm install gameloop\n````\n\n## Usage\n\n### Create a canvas and game object:\n```\nvar canvas = document.createElement('canvas');\n\nvar game = new Game({\n  renderer: canvas.getContext('2d');\n});\n````\n\n### Use update and draw events\n````\ngame.on('update', function(dt){});\n\ngame.on('draw', function(context){});\n````\n\n### Use start, pause, and resume methods\n````\ngame.start();\n\ngame.end();\n\ngame.pause();\n\ngame.resume();\n````\n\nThese methods have corresponding events:\n\n````\ngame.on('start', function(){});\n\ngame.on('end', function(){});\n\ngame.on('pause', function(){});\n\ngame.on('resume', function(){});\n````\n\n\n## Contributing\n- Fork this repository.\n- Create a branch for your changes.\n- Include tests if applicable.\n- Add/edit documentation for any changes.\n- Submit a pull request.\n\n## License\nMIT",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sethvincent/gameloop/issues"
  },
  "homepage": "https://github.com/sethvincent/gameloop",
  "_id": "gameloop@0.3.1",
  "_from": "gameloop@"
}
